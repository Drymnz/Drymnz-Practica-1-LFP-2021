/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package cunoc.practica_1_lfp_2021.view.Reportes;

import cunoc.practica_1_lfp_2021.Errores.ErrorLexema;
import cunoc.practica_1_lfp_2021.Start;
import cunoc.practica_1_lfp_2021.Toke.Palabra;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 * @author Benjamín de Jesús Pérez Aguilar<@Drymnz>
 */
public class ReportesError extends javax.swing.JPanel {

    /**
     * Creates new form ReportesError
     */
    public ReportesError() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPaneListadoErrores = new javax.swing.JScrollPane();
        jTableListadoErrores = new javax.swing.JTable();
        jScrollPaneRecuperador = new javax.swing.JScrollPane();
        jTableRecuperacion = new javax.swing.JTable();

        jButton1.setText("Menu Principal");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTableListadoErrores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPaneListadoErrores.setViewportView(jTableListadoErrores);

        jTableRecuperacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPaneRecuperador.setViewportView(jTableRecuperacion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneListadoErrores, javax.swing.GroupLayout.DEFAULT_SIZE, 1256, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPaneRecuperador))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneListadoErrores, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneRecuperador, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Start.ejecutar.irMenuPrincipal();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPaneListadoErrores;
    private javax.swing.JScrollPane jScrollPaneRecuperador;
    private javax.swing.JTable jTableListadoErrores;
    private javax.swing.JTable jTableRecuperacion;
    // End of variables declaration//GEN-END:variables
  private DefaultTableModel modeloListado;
    private DefaultTableModel modeloRecuperar;
    private ArrayList<Palabra> listadoLexema;

    public void cargarTablas(ArrayList<Palabra> listadoLexema) {
        System.out.println("ENTRO <cargarTablas>");
        this.listadoLexema = listadoLexema;
        modeloListado = (DefaultTableModel) jTableListadoErrores.getModel();
        modeloRecuperar = (DefaultTableModel) jTableRecuperacion.getModel();
        refrescar(modeloRecuperar);
        refrescar(modeloListado);
        cargarTitulos();
        cargarTabla();
        System.out.println("SALIO <cargarTablas>");
    }

    // limpiar la tabla
    public void refrescar(DefaultTableModel modelo) {
        System.out.println("ENTRO <refrescar>");
        int filas = modelo.getRowCount();
        if (filas != 0) {
            for (int i = filas - 1; i >= 0; i--) {// limpieza de la tabla
                modelo.removeRow(i);
            }
        }
        System.out.println("SALIO <refrescar>");
    }
    // asignar titulos a las tablas

    private void cargarTitulos() {
        System.out.println("ENTRO <cargarTitulos>");
        String[] reporteTokensResumido = {"Error recuperado"};
        String[] reporteErrores = {"simbolo o cadena de erro", "posicionX", "posicionY"};
        modeloListado.setColumnIdentifiers(reporteErrores);
        modeloRecuperar.setColumnIdentifiers(reporteTokensResumido);
        System.out.println("SALIO <cargarTitulos>");
    }

    private void cargarTabla() {
        System.out.println("ENTRO <cargarTabla>");
        for (Palabra palabra : listadoLexema) {
            if (palabra != null) {
                if ((palabra instanceof ErrorLexema)) {
                    ErrorLexema ver = (ErrorLexema) palabra;
                    // {"simbolo o cadena de erro", "posicionY","posicionX"};
                    modeloListado.addRow(new Object[]{ver.getCaracter(), ver.getPosicionX(), ver.getPosicionY()});
                    modeloRecuperar.addRow(new Object[]{ver.getRecuperacionError()});
                }
            }
        }
        System.out.println("SALIO <cargarTabla>");
    }
}
